name: Build release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Extract Version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash  # Windows needs an explicit shell for this command

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Executable (Windows)
        if: runner.os == 'Windows'
        run: pyinstaller -i ./assets/icon.ico --name TboiMM-windows.exe --onefile gui.py
        shell: powershell

      - name: Build Executable (macOS)
        if: runner.os == 'macOS'
        run: pyinstaller -i ./assets/icon.icns --name TboiMM-macos --onefile gui.py
        shell: bash

      - name: Build Executable (Linux)
        if: runner.os == 'Linux'
        run: pyinstaller -i ./assets/icon.png --name TboiMM-linux --onefile gui.py
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist/TboiMM-*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/build-*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
